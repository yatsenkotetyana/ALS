filter(!is.na(ALSFRS_R_Total)) %>%
filter(!is.na(ALSFRS_Delta))  %>%
group_by(subject_id, ALSFRS_Delta) %>%
summarise(avg_ALSFRS_R_Total = mean(ALSFRS_R_Total)) %>%
select(impotantcolumns2) %>%
ungroup()
colnames(filter_alsrfs)[colnames(filter_alsrfs) == "avg_ALSFRS_R_Total"] = "ALSFRS_R_Total"
filter_alsrfs$ALSFRS_R_Total <- round( filter_alsrfs$ALSFRS_R_Total )
print(str(filter_alsrfs))
stat_filter_alsrfs <-
filter_alsrfs %>%
group_by(subject_id) %>%
summarise( Number_visits = n(),
first_visit = min(ALSFRS_Delta),
last_visit = max(ALSFRS_Delta),
time_interval_days = 1+max(ALSFRS_Delta) - min(ALSFRS_Delta) )
stat_filter_alsrfs$time_interval_weeks <- floor( stat_filter_alsrfs$time_interval_days / 7.0 )
stat_filter_alsrfs <-
stat_filter_alsrfs  %>%
inner_join(filter_alsrfs, by=c("subject_id" = "subject_id", "first_visit" =  "ALSFRS_Delta")) %>%
unique()
colnames(stat_filter_alsrfs)[colnames(stat_filter_alsrfs) == "ALSFRS_R_Total"] = "intial_ALSFRS_R_Total"
#More than one measurement
stat_filter_alsrfs_op <-
stat_filter_alsrfs %>%
filter(Number_visits>1)
filter_alsrfs <-
filter_alsrfs %>%
mutate(ALSFRS_Delta_weeks = ALSFRS_Delta / 7.0)
filter_alsrfs$ALSFRS_Delta_weeks <- floor( filter_alsrfs$ALSFRS_Delta_weeks )
filter_alsrfs_st <-
filter_alsrfs %>%
inner_join(stat_filter_alsrfs, by=c("subject_id" = "subject_id"))
filter_alsrfs_stop <-
filter_alsrfs %>%
inner_join(stat_filter_alsrfs_op, by=c("subject_id" = "subject_id"))
print(str(stat_filter_alsrfs))
print(str(stat_filter_alsrfs_op))
print(str(filter_alsrfs_st))
print(str(filter_alsrfs_stop))
ggplot(filter_alsrfs_stop, aes(x = ALSFRS_Delta_weeks, y = ALSFRS_R_Total, group=subject_id)) +
geom_line(aes(color=subject_id))+
geom_point(aes(color=subject_id))
p1 <-
filter_alsrfs_stop %>%
filter(intial_ALSFRS_R_Total<=45)
ggplot(p1, aes(x = ALSFRS_Delta_weeks, y = ALSFRS_R_Total, group=subject_id)) +
geom_line(aes(color=subject_id))+
geom_point(aes(color=subject_id))
ggplot(stat_filter_alsrfs, aes(x = intial_ALSFRS_R_Total, y = time_interval_weeks)) +
geom_point(size=2,aes(color = intial_ALSFRS_R_Total))
ggplot(stat_filter_alsrfs, aes(x = Number_visits, y = time_interval_weeks)) +
geom_point(size=2,aes(color = Number_visits))
p1 <-
filter_alsrfs_stop %>%
filter(intial_ALSFRS_R_Total==48)
ggplot(p1, aes(x = ALSFRS_Delta_weeks, y = ALSFRS_R_Total)) +
geom_line(aes(color=subject_id))+
geom_point(aes(color=subject_id))
ggplot(filter_alsrfs_stop, aes(x = ALSFRS_Delta_weeks, y = ALSFRS_R_Total)) +
geom_line(aes(color=subject_id))+
geom_point(aes(color=subject_id))
p1 <-
filter_alsrfs_stop %>%
filter(intial_ALSFRS_R_Total==48)
ggplot(p1, aes(x = ALSFRS_Delta_weeks, y = ALSFRS_R_Total)) +
geom_line(aes(color=subject_id))+
geom_point(aes(color=subject_id))
p1 <-
filter_alsrfs_stop %>%
filter(intial_ALSFRS_R_Total==47)
ggplot(p1, aes(x = ALSFRS_Delta_weeks, y = ALSFRS_R_Total)) +
geom_line(aes(color=subject_id))+
geom_point(aes(color=subject_id))
p1 <-
filter_alsrfs_stop %>%
filter(intial_ALSFRS_R_Total==47)
ggplot(p1, aes(x = ALSFRS_Delta_weeks, y = ALSFRS_R_Total)) +
geom_line(aes(color=subject_id))+
geom_point(aes(color=subject_id))
p1 <-
filter_alsrfs_stop %>%
filter(intial_ALSFRS_R_Total==46)
ggplot(p1, aes(x = ALSFRS_Delta_weeks, y = ALSFRS_R_Total)) +
geom_line(aes(color=subject_id))+
geom_point(aes(color=subject_id))
knitr::opts_chunk$set(echo = TRUE)
if(!require(dplyr)) install.packages("dplyr")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(devtools)) install.packages("devtools")
library(dplyr)
library(devtools)
library(ggplot2)
workdir <- getwd()
finename <- "PROACT_ALSFRS.csv"
alsrfs <-  read.csv(file = paste(workdir,finename,sep="/"))
alsrfs$subject_id <- as.factor(alsrfs$subject_id)
print(str(alsrfs))
impotantcolumns1 <- c("subject_id","ALSFRS_Delta","ALSFRS_R_Total")
impotantcolumns2 <- c("subject_id","ALSFRS_Delta","avg_ALSFRS_R_Total")
# select columns "subject_id","ALSFRS_Delta","ALSFRS_R_Total"
# filter rows with values in columns "ALSFRS_Delta","ALSFRS_R_Total"
# average value of "ALSFRS_R_Total" in a certanin moment of time
# we have several records some time
filter_alsrfs <-
alsrfs %>%
select(impotantcolumns1) %>%
filter(!is.na(ALSFRS_R_Total)) %>%
filter(!is.na(ALSFRS_Delta))  %>%
group_by(subject_id, ALSFRS_Delta) %>%
summarise(avg_ALSFRS_R_Total = mean(ALSFRS_R_Total)) %>%
select(impotantcolumns2) %>%
ungroup()
colnames(filter_alsrfs)[colnames(filter_alsrfs) == "avg_ALSFRS_R_Total"] = "ALSFRS_R_Total"
filter_alsrfs$ALSFRS_R_Total <- round( filter_alsrfs$ALSFRS_R_Total )
print(str(filter_alsrfs))
# Calculate simple statistics: number of measurement (visits), day of first visit, last visit
# time between first and last visit days, weeks, months
stat_filter_alsrfs <-
filter_alsrfs %>%
group_by(subject_id) %>%
summarise( Number_visits = n(),
first_visit = min(ALSFRS_Delta),
last_visit = max(ALSFRS_Delta),
time_interval_days = 1+max(ALSFRS_Delta) - min(ALSFRS_Delta) )
stat_filter_alsrfs$time_interval_weeks <- round( stat_filter_alsrfs$time_interval_days / 7.0 )
stat_filter_alsrfs$time_interval_months <- round( stat_filter_alsrfs$time_interval_days / 30.0 )
# Add value of ALSFRS_R in the first measurement
stat_filter_alsrfs <-
stat_filter_alsrfs  %>%
inner_join(filter_alsrfs, by=c("subject_id" = "subject_id", "first_visit" =  "ALSFRS_Delta")) %>%
unique()
colnames(stat_filter_alsrfs)[colnames(stat_filter_alsrfs) == "ALSFRS_R_Total"] = "intial_ALSFRS_R_Total"
# Add value of ALSFRS_R in the last measurement
stat_filter_alsrfs <-
stat_filter_alsrfs  %>%
inner_join(filter_alsrfs, by=c("subject_id" = "subject_id", "last_visit" =  "ALSFRS_Delta")) %>%
unique()
colnames(stat_filter_alsrfs)[colnames(stat_filter_alsrfs) == "ALSFRS_R_Total"] = "last_ALSFRS_R_Total"
# Changing of ALSFRS_R during all time
stat_filter_alsrfs$degradation <- stat_filter_alsrfs$intial_ALSFRS_R_Total - stat_filter_alsrfs$last_ALSFRS_R_Total
#More than one measurement
stat_filter_alsrfs_op <-
stat_filter_alsrfs %>%
filter(Number_visits>1)
# Slope  of changing of ALSFRS_R during all time
# I done check that stat_filter_alsrfs_op$time_interval_months > 0
stat_filter_alsrfs_op$slopedegradation <- stat_filter_alsrfs_op$degradation / stat_filter_alsrfs_op$time_interval_months
filter_alsrfs <-
filter_alsrfs %>%
mutate(ALSFRS_Delta_weeks = ALSFRS_Delta / 7.0)
filter_alsrfs$ALSFRS_Delta_weeks <- round( filter_alsrfs$ALSFRS_Delta_weeks )
filter_alsrfs_st <-
filter_alsrfs %>%
inner_join(stat_filter_alsrfs, by=c("subject_id" = "subject_id"))
filter_alsrfs_stop <-
filter_alsrfs %>%
inner_join(stat_filter_alsrfs_op, by=c("subject_id" = "subject_id"))
print(str(stat_filter_alsrfs))
print(str(stat_filter_alsrfs_op))
print(str(filter_alsrfs_st))
print(str(filter_alsrfs_stop))
# I have used days for correlation but maybe months is better
result_cor1 <- cor(stat_filter_alsrfs$Number_visits, stat_filter_alsrfs$time_interval_days, method = c("pearson"))
result_cor.test1 <- cor.test(stat_filter_alsrfs$Number_visits, stat_filter_alsrfs$time_interval_days, method=c("pearson"))
print(result_cor1)
print(result_cor.test1)
result_cor2 <- cor(stat_filter_alsrfs$intial_ALSFRS_R_Total, stat_filter_alsrfs$time_interval_days, method = c("pearson"))
result_cor.test2 <- cor.test(stat_filter_alsrfs$intial_ALSFRS_R_Total, stat_filter_alsrfs$time_interval_days, method=c("pearson"))
print(result_cor2)
print(result_cor.test2)
result_cor3 <- cor(stat_filter_alsrfs_op$Number_visits, stat_filter_alsrfs_op$time_interval_days, method = c("pearson"))
result_cor.test3 <- cor.test(stat_filter_alsrfs_op$Number_visits, stat_filter_alsrfs_op$time_interval_days, method=c("pearson"))
print(result_cor3)
print(result_cor.test3)
result_cor4 <- cor(stat_filter_alsrfs_op$intial_ALSFRS_R_Total, stat_filter_alsrfs_op$time_interval_days, method = c("pearson"))
result_cor.test4 <- cor.test(stat_filter_alsrfs_op$intial_ALSFRS_R_Total, stat_filter_alsrfs_op$time_interval_days, method=c("pearson"))
print(result_cor4)
print(result_cor.test4)
ggplot(stat_filter_alsrfs, aes(x = Number_visits)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(Number_visits)),  color="black", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=median(Number_visits)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs, aes(x = Number_visits)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs, aes(x = intial_ALSFRS_R_Total)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(intial_ALSFRS_R_Total)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(intial_ALSFRS_R_Total)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs, aes(x =intial_ALSFRS_R_Total)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs, aes(x = last_ALSFRS_R_Total)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(last_ALSFRS_R_Total)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(last_ALSFRS_R_Total)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs, aes(x =last_ALSFRS_R_Total)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs, aes(x = degradation)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(degradation)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(degradation)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs, aes(x =last_ALSFRS_R_Total)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs, aes(x = degradation)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(degradation)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(degradation)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs, aes(x =degradation)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs_op, aes(x = degradation)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(degradation)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(degradation)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs_op, aes(x =degradation)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs_op, aes(x = slopedegradation)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(slopedegradation)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(slopedegradation)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs_op, aes(x = slopedegradation)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
# select columns "subject_id","ALSFRS_Delta","ALSFRS_R_Total"
# filter rows with values in columns "ALSFRS_Delta","ALSFRS_R_Total"
# average value of "ALSFRS_R_Total" in a certanin moment of time
# we have several records some time
filter_alsrfs <-
alsrfs %>%
select(impotantcolumns1) %>%
filter(!is.na(ALSFRS_R_Total)) %>%
filter(!is.na(ALSFRS_Delta))  %>%
group_by(subject_id, ALSFRS_Delta) %>%
summarise(avg_ALSFRS_R_Total = mean(ALSFRS_R_Total)) %>%
select(impotantcolumns2) %>%
ungroup()
colnames(filter_alsrfs)[colnames(filter_alsrfs) == "avg_ALSFRS_R_Total"] = "ALSFRS_R_Total"
filter_alsrfs$ALSFRS_R_Total <- round( filter_alsrfs$ALSFRS_R_Total )
print(str(filter_alsrfs))
# Calculate simple statistics: number of measurement (visits), day of first visit, last visit
# time between first and last visit days, weeks, months
stat_filter_alsrfs <-
filter_alsrfs %>%
group_by(subject_id) %>%
summarise( Number_visits = n(),
first_visit = min(ALSFRS_Delta),
last_visit = max(ALSFRS_Delta),
time_interval_days = 1+max(ALSFRS_Delta) - min(ALSFRS_Delta) )
stat_filter_alsrfs$time_interval_weeks <- round( stat_filter_alsrfs$time_interval_days / 7.0 )
stat_filter_alsrfs$time_interval_months <- round( stat_filter_alsrfs$time_interval_days / 30.0 )
# Add value of ALSFRS_R in the first measurement
stat_filter_alsrfs <-
stat_filter_alsrfs  %>%
inner_join(filter_alsrfs, by=c("subject_id" = "subject_id", "first_visit" =  "ALSFRS_Delta")) %>%
unique()
colnames(stat_filter_alsrfs)[colnames(stat_filter_alsrfs) == "ALSFRS_R_Total"] = "intial_ALSFRS_R_Total"
# Add value of ALSFRS_R in the last measurement
stat_filter_alsrfs <-
stat_filter_alsrfs  %>%
inner_join(filter_alsrfs, by=c("subject_id" = "subject_id", "last_visit" =  "ALSFRS_Delta")) %>%
unique()
colnames(stat_filter_alsrfs)[colnames(stat_filter_alsrfs) == "ALSFRS_R_Total"] = "last_ALSFRS_R_Total"
# Changing of ALSFRS_R during all time
stat_filter_alsrfs$degradation <- stat_filter_alsrfs$intial_ALSFRS_R_Total - stat_filter_alsrfs$last_ALSFRS_R_Total
#More than one measurement + more than 1 month
stat_filter_alsrfs_op <-
stat_filter_alsrfs %>%
filter(Number_visits>1) %>%
flter(time_interval_months>0)
# select columns "subject_id","ALSFRS_Delta","ALSFRS_R_Total"
# filter rows with values in columns "ALSFRS_Delta","ALSFRS_R_Total"
# average value of "ALSFRS_R_Total" in a certanin moment of time
# we have several records some time
filter_alsrfs <-
alsrfs %>%
select(impotantcolumns1) %>%
filter(!is.na(ALSFRS_R_Total)) %>%
filter(!is.na(ALSFRS_Delta))  %>%
group_by(subject_id, ALSFRS_Delta) %>%
summarise(avg_ALSFRS_R_Total = mean(ALSFRS_R_Total)) %>%
select(impotantcolumns2) %>%
ungroup()
colnames(filter_alsrfs)[colnames(filter_alsrfs) == "avg_ALSFRS_R_Total"] = "ALSFRS_R_Total"
filter_alsrfs$ALSFRS_R_Total <- round( filter_alsrfs$ALSFRS_R_Total )
print(str(filter_alsrfs))
# Calculate simple statistics: number of measurement (visits), day of first visit, last visit
# time between first and last visit days, weeks, months
stat_filter_alsrfs <-
filter_alsrfs %>%
group_by(subject_id) %>%
summarise( Number_visits = n(),
first_visit = min(ALSFRS_Delta),
last_visit = max(ALSFRS_Delta),
time_interval_days = 1+max(ALSFRS_Delta) - min(ALSFRS_Delta) )
stat_filter_alsrfs$time_interval_weeks <- round( stat_filter_alsrfs$time_interval_days / 7.0 )
stat_filter_alsrfs$time_interval_months <- round( stat_filter_alsrfs$time_interval_days / 30.0 )
# Add value of ALSFRS_R in the first measurement
stat_filter_alsrfs <-
stat_filter_alsrfs  %>%
inner_join(filter_alsrfs, by=c("subject_id" = "subject_id", "first_visit" =  "ALSFRS_Delta")) %>%
unique()
colnames(stat_filter_alsrfs)[colnames(stat_filter_alsrfs) == "ALSFRS_R_Total"] = "intial_ALSFRS_R_Total"
# Add value of ALSFRS_R in the last measurement
stat_filter_alsrfs <-
stat_filter_alsrfs  %>%
inner_join(filter_alsrfs, by=c("subject_id" = "subject_id", "last_visit" =  "ALSFRS_Delta")) %>%
unique()
colnames(stat_filter_alsrfs)[colnames(stat_filter_alsrfs) == "ALSFRS_R_Total"] = "last_ALSFRS_R_Total"
# Changing of ALSFRS_R during all time
stat_filter_alsrfs$degradation <- stat_filter_alsrfs$intial_ALSFRS_R_Total - stat_filter_alsrfs$last_ALSFRS_R_Total
#More than one measurement + more than 1 month
stat_filter_alsrfs_op <-
stat_filter_alsrfs %>%
filter(Number_visits>1) %>%
filter(time_interval_months>0)
# Slope  of changing of ALSFRS_R during all time
stat_filter_alsrfs_op$slopedegradation <- stat_filter_alsrfs_op$degradation / stat_filter_alsrfs_op$time_interval_months
filter_alsrfs <-
filter_alsrfs %>%
mutate(ALSFRS_Delta_weeks = ALSFRS_Delta / 7.0)
filter_alsrfs$ALSFRS_Delta_weeks <- round( filter_alsrfs$ALSFRS_Delta_weeks )
filter_alsrfs_st <-
filter_alsrfs %>%
inner_join(stat_filter_alsrfs, by=c("subject_id" = "subject_id"))
filter_alsrfs_stop <-
filter_alsrfs %>%
inner_join(stat_filter_alsrfs_op, by=c("subject_id" = "subject_id"))
print(str(stat_filter_alsrfs))
print(str(stat_filter_alsrfs_op))
print(str(filter_alsrfs_st))
print(str(filter_alsrfs_stop))
ggplot(stat_filter_alsrfs_op, aes(x = degradation)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(degradation)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(degradation)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs_op, aes(x =degradation)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs_op, aes(x = slopedegradation)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(slopedegradation)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(slopedegradation)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs_op, aes(x = slopedegradation)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs_op, aes(x = slopedegradation)) +
geom_histogram(color="blue", fill="lightblue", binwidth=0.25) +
geom_vline(aes(xintercept=mean(slopedegradation)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(slopedegradation)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs_op, aes(x = slopedegradation)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=0.25)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs, aes(x = Number_visits, y = time_interval_weeks)) +
geom_point(size=2,aes(color = Number_visits))
knitr::opts_chunk$set(echo = TRUE)
if(!require(dplyr)) install.packages("dplyr")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(devtools)) install.packages("devtools")
library(dplyr)
library(devtools)
library(ggplot2)
workdir <- getwd()
finename <- "PROACT_ALSFRS.csv"
alsrfs <-  read.csv(file = paste(workdir,finename,sep="/"))
alsrfs$subject_id <- as.factor(alsrfs$subject_id)
print(str(alsrfs))
impotantcolumns1 <- c("subject_id","ALSFRS_Delta","ALSFRS_R_Total")
impotantcolumns2 <- c("subject_id","ALSFRS_Delta","avg_ALSFRS_R_Total")
# select columns "subject_id","ALSFRS_Delta","ALSFRS_R_Total"
# filter rows with values in columns "ALSFRS_Delta","ALSFRS_R_Total"
# average value of "ALSFRS_R_Total" in a certanin moment of time
# we have several records some time
filter_alsrfs <-
alsrfs %>%
select(impotantcolumns1) %>%
filter(!is.na(ALSFRS_R_Total)) %>%
filter(!is.na(ALSFRS_Delta))  %>%
group_by(subject_id, ALSFRS_Delta) %>%
summarise(avg_ALSFRS_R_Total = mean(ALSFRS_R_Total)) %>%
select(impotantcolumns2) %>%
ungroup()
colnames(filter_alsrfs)[colnames(filter_alsrfs) == "avg_ALSFRS_R_Total"] = "ALSFRS_R_Total"
filter_alsrfs$ALSFRS_R_Total <- round( filter_alsrfs$ALSFRS_R_Total )
print(str(filter_alsrfs))
# Calculate simple statistics: number of measurement (visits), day of first visit, last visit
# time between first and last visit days, weeks, months
stat_filter_alsrfs <-
filter_alsrfs %>%
group_by(subject_id) %>%
summarise( Number_visits = n(),
first_visit = min(ALSFRS_Delta),
last_visit = max(ALSFRS_Delta),
time_interval_days = 1+max(ALSFRS_Delta) - min(ALSFRS_Delta) )
stat_filter_alsrfs$time_interval_weeks <- round( stat_filter_alsrfs$time_interval_days / 7.0 )
stat_filter_alsrfs$time_interval_months <- round( stat_filter_alsrfs$time_interval_days / 30.0 )
# Add value of ALSFRS_R in the first measurement
stat_filter_alsrfs <-
stat_filter_alsrfs  %>%
inner_join(filter_alsrfs, by=c("subject_id" = "subject_id", "first_visit" =  "ALSFRS_Delta")) %>%
unique()
colnames(stat_filter_alsrfs)[colnames(stat_filter_alsrfs) == "ALSFRS_R_Total"] = "intial_ALSFRS_R_Total"
# Add value of ALSFRS_R in the last measurement
stat_filter_alsrfs <-
stat_filter_alsrfs  %>%
inner_join(filter_alsrfs, by=c("subject_id" = "subject_id", "last_visit" =  "ALSFRS_Delta")) %>%
unique()
colnames(stat_filter_alsrfs)[colnames(stat_filter_alsrfs) == "ALSFRS_R_Total"] = "last_ALSFRS_R_Total"
# Changing of ALSFRS_R during all time
stat_filter_alsrfs$degradation <- stat_filter_alsrfs$intial_ALSFRS_R_Total - stat_filter_alsrfs$last_ALSFRS_R_Total
#More than one measurement + more than 1 month
stat_filter_alsrfs_op <-
stat_filter_alsrfs %>%
filter(Number_visits>1) %>%
filter(time_interval_months>0)
# Slope  of changing of ALSFRS_R during all time
stat_filter_alsrfs_op$slopedegradation <- stat_filter_alsrfs_op$degradation / stat_filter_alsrfs_op$time_interval_months
filter_alsrfs <-
filter_alsrfs %>%
mutate(ALSFRS_Delta_weeks = ALSFRS_Delta / 7.0)
filter_alsrfs$ALSFRS_Delta_weeks <- round( filter_alsrfs$ALSFRS_Delta_weeks )
filter_alsrfs_st <-
filter_alsrfs %>%
inner_join(stat_filter_alsrfs, by=c("subject_id" = "subject_id"))
filter_alsrfs_stop <-
filter_alsrfs %>%
inner_join(stat_filter_alsrfs_op, by=c("subject_id" = "subject_id"))
print(str(stat_filter_alsrfs))
print(str(stat_filter_alsrfs_op))
print(str(filter_alsrfs_st))
print(str(filter_alsrfs_stop))
# I have used days for correlation but maybe months is better
result_cor1 <- cor(stat_filter_alsrfs$Number_visits, stat_filter_alsrfs$time_interval_days, method = c("pearson"))
result_cor.test1 <- cor.test(stat_filter_alsrfs$Number_visits, stat_filter_alsrfs$time_interval_days, method=c("pearson"))
print(result_cor1)
print(result_cor.test1)
result_cor2 <- cor(stat_filter_alsrfs$intial_ALSFRS_R_Total, stat_filter_alsrfs$time_interval_days, method = c("pearson"))
result_cor.test2 <- cor.test(stat_filter_alsrfs$intial_ALSFRS_R_Total, stat_filter_alsrfs$time_interval_days, method=c("pearson"))
print(result_cor2)
print(result_cor.test2)
result_cor3 <- cor(stat_filter_alsrfs_op$Number_visits, stat_filter_alsrfs_op$time_interval_days, method = c("pearson"))
result_cor.test3 <- cor.test(stat_filter_alsrfs_op$Number_visits, stat_filter_alsrfs_op$time_interval_days, method=c("pearson"))
print(result_cor3)
print(result_cor.test3)
result_cor4 <- cor(stat_filter_alsrfs_op$intial_ALSFRS_R_Total, stat_filter_alsrfs_op$time_interval_days, method = c("pearson"))
result_cor.test4 <- cor.test(stat_filter_alsrfs_op$intial_ALSFRS_R_Total, stat_filter_alsrfs_op$time_interval_days, method=c("pearson"))
print(result_cor4)
print(result_cor.test4)
ggplot(stat_filter_alsrfs, aes(x = Number_visits)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(Number_visits)),  color="black", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=median(Number_visits)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs, aes(x = Number_visits)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs, aes(x = intial_ALSFRS_R_Total)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(intial_ALSFRS_R_Total)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(intial_ALSFRS_R_Total)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs, aes(x =intial_ALSFRS_R_Total)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs, aes(x = last_ALSFRS_R_Total)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(last_ALSFRS_R_Total)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(last_ALSFRS_R_Total)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs, aes(x =last_ALSFRS_R_Total)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs, aes(x = degradation)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(degradation)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(degradation)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs, aes(x =degradation)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs_op, aes(x = degradation)) +
geom_histogram(color="blue", fill="lightblue", binwidth=1) +
geom_vline(aes(xintercept=mean(degradation)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(degradation)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs_op, aes(x =degradation)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=1)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs_op, aes(x = slopedegradation)) +
geom_histogram(color="blue", fill="lightblue", binwidth=0.25) +
geom_vline(aes(xintercept=mean(slopedegradation)),  color="black", linetype="dashed", linewidth=1) +
geom_vline(aes(xintercept=median(slopedegradation)),  color="red", linetype="dashed", linewidth=1)
ggplot(stat_filter_alsrfs_op, aes(x = slopedegradation)) +
geom_histogram(aes(y=after_stat(density)), color="blue", fill="lightblue", binwidth=0.25)+
geom_density(alpha=.2, fill="#FF6666")
ggplot(stat_filter_alsrfs, aes(x = Number_visits, y = time_interval_months)) +
geom_point(size=2,aes(color = Number_visits))
ggplot(stat_filter_alsrfs, aes(x = Number_visits, y = time_interval_months)) +
geom_point(size=2,aes(color = Number_visits))
ggplot(stat_filter_alsrfs, aes(x = intial_ALSFRS_R_Total, y = time_interval_months)) +
geom_point(size=2,aes(color = intial_ALSFRS_R_Total))
ggplot(stat_filter_alsrfs, aes(x = last_ALSFRS_R_Total, y = time_interval_months)) +
geom_point(size=2,aes(color = intial_ALSFRS_R_Total))
ggplot(stat_filter_alsrfs, aes(x = last_ALSFRS_R_Total, y = time_interval_months)) +
geom_point(size=2,aes(color = last_ALSFRS_R_Total))
ggplot(stat_filter_alsrfs_op, aes(x = degradation, y = time_interval_months)) +
geom_point(size=2,aes(color = degradation))
ggplot(stat_filter_alsrfs_op, aes(x = slopedegradation, y = time_interval_months)) +
geom_point(size=2,aes(color = slopedegradation))
ggplot(stat_filter_alsrfs_op, aes(x = slopedegradation, y = time_interval_months)) +
geom_point(size=2,aes(color = slopedegradation))
ggplot(stat_filter_alsrfs_op, aes(x = intial_ALSFRS_R_Total, y = last_ALSFRS_R_Total)) +
geom_point(size=2,aes(color = intial_ALSFRS_R_Total))
